var lang = 'ru'
var texts = {
    'ru':{
      'days':'д.',
      'hours':'ч.',
      'minutes':'м.',
    },
    'en':{
      'days':'d.',
      'hours':'h.',
      'minutes':'m.',
    }
}

$(document).ready(() => { 
  if( $('html').prop('lang') !== '' ){
      lang = $('html').prop('lang')
  }
})

function getTimeRemaining(endtime) {
    var t = Date.parse(new Date(endtime*1000)) - Date.parse(new Date())
    var seconds = Math.floor((t / 1000) % 60)
    var minutes = Math.floor((t / 1000 / 60) % 60)
    var hours = Math.floor((t / (1000 * 60 * 60) % 24 ))
    var days = Math.floor((t / (1000 * 60 * 60 * 24)))
    return {
      'total': t,
      'days': days,
      'hours': hours,
      'minutes': minutes,
      'seconds': seconds
    }
  }

  
  function initializeClock(id, endtime) {
    let timeinterval = setInterval(updateClock, 1000)
    let clock = document.getElementById(id)
    let progress = document.getElementById(id+'_progress')
    // let hoursSpan_1 = clock.querySelector('.timer__clock-h .timer__clock-value span:first-child')
    // let hoursSpan_2 = clock.querySelector('.timer__clock-h .timer__clock-value span:last-child')

    // let minutesSpan_1 = clock.querySelector('.timer__clock-m .timer__clock-value span:first-child')
    // let minutesSpan_2 = clock.querySelector('.timer__clock-m .timer__clock-value span:last-child')

    // let secondsSpan_1 = clock.querySelector('.timer__clock-s .timer__clock-value span:first-child')
    // let secondsSpan_2 = clock.querySelector('.timer__clock-s .timer__clock-value span:last-child')
  
    function updateClock() {
      let t = getTimeRemaining(endtime)
      
      let h_arr = ('0' + t.hours).split('', 3)
      let m_arr = ('0' + t.minutes).split('', 3)
      let s_arr = ('0' + t.seconds).split('', 3)

      let hours = h_arr[h_arr.length-2]+h_arr[h_arr.length-1]
      let minutes = m_arr[m_arr.length-2]+m_arr[m_arr.length-1]
      let seconds = s_arr[s_arr.length-2]+s_arr[s_arr.length-1]

      // hoursSpan_1.innerHTML = h_arr[h_arr.length-2]
      // hoursSpan_2.innerHTML = h_arr[h_arr.length-1]

      // minutesSpan_1.innerHTML = m_arr[m_arr.length-2]
      // minutesSpan_2.innerHTML = m_arr[m_arr.length-1]

      // secondsSpan_1.innerHTML = s_arr[s_arr.length-2]
      // secondsSpan_2.innerHTML = s_arr[s_arr.length-1]
      
      clock.innerHTML = hours+':'+minutes+':'+seconds
      // progress.style.width = (100 - t.total/864000)+'%'
      if (t.total <= 0) {
        clock.innerHTML = '00:00:00'
        // progress.style.width = '100%'
        clearInterval(timeinterval)
      }
    }
  
    updateClock()
    // timeinterval = setInterval(updateClock, 1000)
  }

  function initializeClockInvestBonus(id, endtime) {
    let timeinterval = setInterval(updateClock, 1000)
    let clock = document.getElementById(id)
    let progress = document.getElementById(id+'_progress')
    // let hoursSpan_1 = clock.querySelector('.timer__clock-h .timer__clock-value span:first-child')
    // let hoursSpan_2 = clock.querySelector('.timer__clock-h .timer__clock-value span:last-child')

    // let minutesSpan_1 = clock.querySelector('.timer__clock-m .timer__clock-value span:first-child')
    // let minutesSpan_2 = clock.querySelector('.timer__clock-m .timer__clock-value span:last-child')

    // let secondsSpan_1 = clock.querySelector('.timer__clock-s .timer__clock-value span:first-child')
    // let secondsSpan_2 = clock.querySelector('.timer__clock-s .timer__clock-value span:last-child')
  
    function updateClock() {
      let t = getTimeRemaining(endtime)
      
      let h_arr = ('0' + t.hours).split('', 3)
      let m_arr = ('0' + t.minutes).split('', 3)
      let s_arr = ('0' + t.seconds).split('', 3)
      
      let days = t.days
      let hours = h_arr[h_arr.length-2]+h_arr[h_arr.length-1]
      let minutes = m_arr[m_arr.length-2]+m_arr[m_arr.length-1]
      let seconds = s_arr[s_arr.length-2]+s_arr[s_arr.length-1]

      hours = parseInt(days*24)+parseInt(hours)
      // hoursSpan_1.innerHTML = h_arr[h_arr.length-2]
      // hoursSpan_2.innerHTML = h_arr[h_arr.length-1]

      // minutesSpan_1.innerHTML = m_arr[m_arr.length-2]
      // minutesSpan_2.innerHTML = m_arr[m_arr.length-1]

      // secondsSpan_1.innerHTML = s_arr[s_arr.length-2]
      // secondsSpan_2.innerHTML = s_arr[s_arr.length-1]
      
      clock.innerHTML = hours+':'+minutes+':'+seconds
      if( progress != null ){
        progress.style.width = (100 - t.total/864000)+'%'
      }
      if (t.total <= 0) {
        clock.innerHTML = '00:00:00'
        if( progress != null ){
          progress.style.width = '100%'
        }
        clearInterval(timeinterval)
      }
    }
  
    updateClock()
    // timeinterval = setInterval(updateClock, 1000)
  }

  function initializeMiningClock(id, endtime) {
    let timeinterval = setInterval(updateClock, 1000)
    let clock = document.getElementById(id)
  
    function updateClock() {
      let t = getTimeRemaining(endtime)
      
      let h_arr = ('0' + t.hours).split('', 3)
      let m_arr = ('0' + t.minutes).split('', 3)
      let s_arr = ('0' + t.seconds).split('', 3)

      let days = t.days
      let hours = h_arr[h_arr.length-2]+h_arr[h_arr.length-1]
      let minutes = m_arr[m_arr.length-2]+m_arr[m_arr.length-1]
      let seconds = s_arr[s_arr.length-2]+s_arr[s_arr.length-1]

      clock.innerHTML = days+'d '+hours+':'+minutes
      if (t.total <= 0) {
        clock.innerHTML = '0d 00:00'
        clearInterval(timeinterval)
      }
    }
  
    updateClock()
  }

  function initializeStartBonusClock(id, endtime) {
    let timeinterval = setInterval(updateClock, 1000)
    let clock = document.getElementById(id)
  
    function updateClock() {
      let t = getTimeRemaining(endtime)
      
      let h_arr = ('0' + t.hours).split('', 3)
      let m_arr = ('0' + t.minutes).split('', 3)

      let hours = h_arr[h_arr.length-2]+h_arr[h_arr.length-1]
      let minutes = m_arr[m_arr.length-2]+m_arr[m_arr.length-1]

      clock.innerHTML = hours+':'+minutes
      if (t.total <= 0) {
        clock.innerHTML = '00:00'
        clearInterval(timeinterval)
      }
    }
  
    updateClock()
  }

  function initializeStartOutClock(id, endtime) {
    let timeinterval = setInterval(updateClock, 1000)
    let clock = document.getElementById(id)
  
    function updateClock() {
      let t = getTimeRemaining(endtime)
      let h = parseInt(t.hours) 
      let h_arr = ('0' + h ).split('', 3)
      let m_arr = ('0' + t.minutes).split('', 3)

      let hours = h_arr[h_arr.length-2]+h_arr[h_arr.length-1]
      let minutes = m_arr[m_arr.length-2]+m_arr[m_arr.length-1]

      clock.innerHTML = t.days+texts[lang]['days']+', '+hours+texts[lang]['hours']+', '+minutes+texts[lang]['minutes']
      if (t.total <= 0) {
        clock.innerHTML = '0'+texts[lang]['days']+', '+'0'+texts[lang]['hours']+', '+'0'+texts[lang]['minutes']
        clearInterval(timeinterval)
        location.reload()
      }
    }
  
    updateClock()
  }
  

/*var countdownNumberEl = document.getElementById('countdown-number');
var countdown = 100;

document.getElementById("first_circle").style.WebkitAnimation = "countdown "+countdown+"s linear infinite";
document.getElementById("first_circle").style.animation = "countdown "+countdown+"s linear infinite";

countdownNumberEl.textContent = countdown;

setInterval(function() {
  countdown = --countdown <= 0 ? 100 : countdown;

  countdownNumberEl.textContent = countdown;
}, 1000);
*/
var circle_dasharray = 375;
/**
 * 
 * @param {*} endtime / timestamp
 * @param {*} currenttime / timestamp
 */
function getTimeRemainingRound(currenttime, endtime) {
    //var t = Date.parse(endtime) - Date.parse(new Date());
    var t = Date.parse(new Date(endtime*1000)) - Date.parse(new Date(currenttime*1000));
    var seconds = Math.floor((t / 1000) % 60);
    var minutes = Math.floor((t / 1000 / 60) % 60);
    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
    
    return {
      'total': t,
      'hours': hours,
      'minutes': minutes,
      'seconds': seconds
    };
}

/**
 * 
 * @param {*} endtime / timestamp
 * @param {*} currenttime / timestamp
 */
function getTimeDifference(currenttime, endtime){
    return parseInt(Date.parse(new Date(endtime*1000)) - Date.parse(new Date(currenttime*1000))) / 1000;
}

/**
 * 
 * @param {*} id 
 * @param {*} currenttime / timestamp
 * @param {*} endtime  / timestamp
 * @param {*} hours
 */
function initializeClockRoundBig(id, currenttime, endtime, hours) {  
    let countdown = getTimeDifference(currenttime, endtime);
    let start_stroke_dashoffset = 375 - (185*countdown/(hours*60*60));

    $('#'+id+' .circle').css('stroke-dashoffset', start_stroke_dashoffset+'px');
    document.getElementById(id+'_circle').style.WebkitAnimation = "countdown "+countdown+"s linear infinite";
    document.getElementById(id+'_circle').style.animation = "countdown "+countdown+"s linear infinite";
    
    function updateClockRound() {
      currenttime++
      var t = getTimeRemainingRound(currenttime, endtime);

      $('#'+id+' .countdown-number').text(
        ('0' + t.hours).slice(-2)+':'+
        ('0' + t.minutes).slice(-2)
      );
         
      if (t.total <= 0) {
        $('#'+id+' .countdown-number').text('00:00');
        document.getElementById(id+'_circle').style.WebkitAnimation = "none";
        document.getElementById(id+'_circle').style.animation = "none";
        $('#'+id+' .circle').css('stroke-dashoffset', circle_dasharray+'px');
        clearInterval(timeinterval);
        return true;
      }
    }
   
    updateClockRound();
    var timeinterval = setInterval(updateClockRound, 1000);
}

/**
 * 
 * @param {*} id 
 * @param {*} currenttime / timestamp
 * @param {*} endtime  / timestamp
 * @param {*} hours
 */
function initializeClockRound(id, currenttime, endtime, hours) {  
  let countdown = getTimeDifference(currenttime, endtime);
  let start_stroke_dashoffset = 375 - (125*countdown/(hours*60*60));

  $('#'+id+' .circle').css('stroke-dashoffset', start_stroke_dashoffset+'px');
  document.getElementById(id+'_circle').style.WebkitAnimation = "countdown "+countdown+"s linear infinite";
  document.getElementById(id+'_circle').style.animation = "countdown "+countdown+"s linear infinite";
  
  function updateClockRound() {
    currenttime++
    var t = getTimeRemainingRound(currenttime, endtime);

    $('#'+id+' .countdown-number').text(
      ('0' + t.hours).slice(-2)+':'+
      ('0' + t.minutes).slice(-2)
    );
       
    if (t.total <= 0) {
      $('#'+id+' .countdown-number').text('00:00');
      document.getElementById(id+'_circle').style.WebkitAnimation = "none";
      document.getElementById(id+'_circle').style.animation = "none";
      $('#'+id+' .circle').css('stroke-dashoffset', circle_dasharray+'px');
      clearInterval(timeinterval);
      return true;
    }
  }
 
  updateClockRound();
  var timeinterval = setInterval(updateClockRound, 1000);
}


function initializeClockSurfing(id, endtime) {
  let timeinterval = setInterval(updateClock, 1000)
  let clock = document.getElementById(id)
  // let hoursSpan_1 = clock.querySelector('.timer__clock-h .timer__clock-value span:first-child')
  // let hoursSpan_2 = clock.querySelector('.timer__clock-h .timer__clock-value span:last-child')

  // let minutesSpan_1 = clock.querySelector('.timer__clock-m .timer__clock-value span:first-child')
  // let minutesSpan_2 = clock.querySelector('.timer__clock-m .timer__clock-value span:last-child')

  // let secondsSpan_1 = clock.querySelector('.timer__clock-s .timer__clock-value span:first-child')
  // let secondsSpan_2 = clock.querySelector('.timer__clock-s .timer__clock-value span:last-child')

  function updateClock() {
    let t = getTimeRemaining(endtime)
    
    let s_arr = ('0' + t.seconds).split('', 3)

    let seconds = s_arr[s_arr.length-2]+s_arr[s_arr.length-1]

    clock.innerHTML = 'До конца просмотра осталось: '+seconds+' сек.'
    if (t.total <= 0) {
      clock.innerHTML = ''
      clearInterval(timeinterval)
    }
  }

  updateClock()
  // timeinterval = setInterval(updateClock, 1000)
}
